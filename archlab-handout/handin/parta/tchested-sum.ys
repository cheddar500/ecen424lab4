# Chet Taylor   netID: tchested
# 24 Feb 2021
# sim 

# Execution begins at address 0
        .pos 0
init:   irmovl  Stack, %esp     # Set up stack pointer
        rrmovl  %esp,%ebp       # Set up base pointer
        irmovl  ele1,%eax
        pushl   %eax
        call    sum_list        # Execute main program
        halt                    # Terminate program


# Sample linked list
#        .align 4
#ele1:   .long 0x00a
#        .long ele2
#ele2:   .long 0x0b0
#        .long ele3
#ele3:   .long 0xc00
#        .long 0

# Sample linked list
.align 8
ele1:
        .quad 0x00a
        .quad ele2
ele2:
        .quad 0x0b0
        .quad ele3
ele3:
        .quad 0xc00
        .quad 0

            # int sum_list(list_ptr ls)
sum_list:   pushl   %ebp
            rrmovl  %esp,%ebp
            xorl    %eax,%eax       # val = 0
            mrmovl  8(%ebp),%edx    # edx = ls
            andl    %edx,%edx       # Set condition codes
            je      End
Loop:       mrmovl  (%edx),%ecx     # ecx = ls->val
            addl    %ecx,%eax       # val += ls->val
            mrmovl  4(%edx),%edx    # ls = ls->next
            andl    %edx,%edx       # Set condition codes
            jne     Loop
End:        rrmovl  %ebp,%esp
            popl    %ebp
            nop                     # makes sure stop in 31 steps
            ret

# The stack starts here and grows to lower addresses
        .pos 0x100
Stack: